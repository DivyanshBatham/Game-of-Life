{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.png"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","e","x","target","dataset","y","grid","state","setState","squares","row","rowNumber","map","s","i","react_default","a","createElement","className","key","data-x","data-y","rows","calculateSum","h","length","w","sum","dx","dy","generateNextGeneration","generation","nextGrid","j","push","start","pause","interval","setInterval","speed","clearInterval","changeSpeed","speeds","newSpeed","indexOf","console","log","randomize","height","document","getElementById","offsetHeight","width","offsetWidth","Math","floor","table","r","Array","fill","n","Boolean","random","clear","cellSize","id","src","logo","alt","viewBox","data-name","transform","clipPath","d","xmlns","Component","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.733ea5af.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.png';\n// import logomobile from './logo-mobile.png';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      cellSize: 30,\n      generation: 0,\n      speed: 200\n    }\n  }\n\n  onClick = (e) => {\n    const x = +e.target.dataset.x, y = +e.target.dataset.y;\n\n    let grid = this.state.grid;\n    grid[x][y] = !grid[x][y];\n\n    this.setState({\n      grid: grid\n    })\n  }\n\n  // changeSize = () => {\n\n  // }\n\n  // For Rendering Only:\n  squares = (row, rowNumber) => {\n    return row.map((s, i) => <div className={s ? \"square active\" : \"square\"} key={i} data-x={rowNumber} data-y={i} onClick={this.onClick}></div>);\n  }\n\n  // For Rendering Only:\n  rows = () => {\n    return this.state.grid.map((row, rowNumber) => <div className=\"row\" key={rowNumber}>{this.squares(row, rowNumber)}</div>);\n  }\n\n  // Utility Function\n  calculateSum = (x, y) => {\n\n    let h = this.state.grid.length, w = this.state.grid[x].length;\n\n    let sum = 0;\n    for (let dx = -1; dx < 2; dx++)\n      for (let dy = -1; dy < 2; dy++)\n        if (!(dx === 0 && dy === 0))\n          sum += +this.state.grid[(x + dx + h) % h][(y + dy + w) % w];\n\n    return sum;\n  }\n\n  generateNextGeneration = () => {\n\n    this.setState((state, props) => ({\n      generation: state.generation + 1\n    }));\n\n    // Rules:\n    // Any live cell with fewer than two live neighbors dies, as if by underpopulation. if true: s<2 -> false\n    // Any live cell with two or three live neighbors lives on to the next generation.  if true: s=2,3 -> true\n    // Any live cell with more than three live neighbors dies, as if by overpopulation. if true: s>3 -> false\n    // Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.  if false: s=3 -> true\n\n\n    // Should I be cloning the grid? let nextGrid = Array.from(this.state.grid);  #DOUBT\n    let nextGrid = [];\n\n    for (let i = 0; i < this.state.grid.length; i++) {\n      let row = [];\n      for (let j = 0; j < this.state.grid[i].length; j++) {\n        let sum = this.calculateSum(i, j);\n        if (this.state.grid[i][j]) {\n          if (sum < 2 || sum > 3)\n            row.push(false);\n          else\n            row.push(true);\n        } else {\n          row.push(sum === 3);\n        }\n      }\n      nextGrid.push(row);\n    }\n\n    this.setState({\n      grid: nextGrid\n    })\n  }\n\n  componentDidMount() {\n\n    let height = document.getElementById('Main').offsetHeight;\n    let width = document.getElementById('Main').offsetWidth;\n    const w = Math.floor(width / 30) + 1, h = Math.floor(height / 30) + 1;\n\n    console.log(\"Grid INIT: \");\n    console.table({ height, width, h, w });\n\n    let row;\n    let grid = [];\n    for (let r = 1; r <= h; r++) {\n\n      // Randomize Cells:\n      // row = Array(w).fill(null).map((n, i) => Boolean(Math.floor(Math.random() * 2)));\n\n      // Empty Grid:\n      row = Array(w).fill(null).map((n, i) => false);\n\n      grid.push(row);\n    }\n\n    this.setState({\n      grid: grid\n    })\n\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  // CONTROLS:\n  start = () => {\n    // this.generateNextGeneration();\n    this.pause();\n    this.interval = setInterval(() => this.generateNextGeneration(), this.state.speed);\n  }\n\n  pause = () => {\n    clearInterval(this.interval);\n  }\n\n  changeSpeed = () => {\n    clearInterval(this.interval);\n    const speeds = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000];\n    const newSpeed = speeds[(speeds.indexOf(this.state.speed) + 1) % speeds.length];\n\n    this.setState({\n      speed: newSpeed\n    })\n\n    this.interval = setInterval(() => this.generateNextGeneration(), newSpeed);\n    console.log(\"Speed Set to - \" + newSpeed);\n\n  }\n\n  randomize = () => {\n    this.pause();\n    let height = document.getElementById('Main').offsetHeight;\n    let width = document.getElementById('Main').offsetWidth;\n    const w = Math.floor(width / 30) + 1, h = Math.floor(height / 30) + 1;\n\n    console.log(\"Grid INIT: \");\n    console.table({ height, width, h, w });\n\n    let row;\n    let grid = [];\n    for (let r = 1; r <= h; r++) {\n      row = Array(w).fill(null).map((n, i) => Boolean(Math.floor(Math.random() * 2)));\n      grid.push(row);\n    }\n\n    this.setState({\n      grid: grid,\n      generation: 0\n    });\n  }\n\n  clear = () => {\n    this.pause();\n    let height = document.getElementById('Main').offsetHeight;\n    let width = document.getElementById('Main').offsetWidth;\n    const w = Math.floor(width / 30) + 1, h = Math.floor(height / 30) + 1;\n\n    console.log(\"Grid INIT: \");\n    console.table({ height, width, h, w });\n\n    let row;\n    let grid = [];\n    for (let r = 1; r <= h; r++) {\n      row = Array(w).fill(null).map((n, i) => false);\n      grid.push(row);\n    }\n\n    this.setState({\n      grid: grid,\n      generation: 0\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"Main\">\n          < this.rows />\n        </div>\n        <div id=\"Side\">\n          <div className=\"TopHalf\">\n            <img src={logo} alt=\"Logo\" />\n            <div className=\"controls\">\n              <ul>\n                <li onClick={this.start}>\n                  <svg viewBox=\"0 0 100 100\">\n                    <defs>\n                      <clipPath id=\"clip-path\">\n                        <rect id=\"Rectangle_2\" data-name=\"Rectangle 2\" fill=\"#19d676\" width=\"100\" height=\"100\" transform=\"translate(227 -404)\" />\n                      </clipPath>\n                    </defs>\n                    <g id=\"Play\" clipPath=\"url(#clip-path)\" transform=\"translate(-227 404)\">\n                      <path id=\"round-play_circle_filled-24px\" fill=\"#19d676\" d=\"M60,10a50,50,0,1,0,50,50A50.018,50.018,0,0,0,60,10ZM50,77.5v-35a2.5,2.5,0,0,1,4-2L77.35,58a2.482,2.482,0,0,1,0,4L54,79.5a2.5,2.5,0,0,1-4-2Z\" transform=\"translate(217 -414)\" />\n                    </g>\n                  </svg>\n                  <div className=\"controlsText\">\n                    Play\n                  </div>\n                </li>\n                <li onClick={this.pause}>\n                  <svg viewBox=\"0 0 100 100\">\n                    <defs>\n                      <clipPath id=\"clip-path2\">\n                        <rect id=\"Rectangle_3\" data-name=\"Rectangle 3\" fill=\"#19d676\" width=\"100\" height=\"100\" transform=\"translate(360 -404)\" />\n                      </clipPath>\n                    </defs>\n                    <g id=\"Pause\" clipPath=\"url(#clip-path2)\" transform=\"translate(-360 404)\">\n                      <path id=\"round-pause_circle_filled-24px\" fill=\"#19d676\" d=\"M60,10a50,50,0,1,0,50,50A50.018,50.018,0,0,0,60,10ZM50,80a5.015,5.015,0,0,1-5-5V45a5,5,0,0,1,10,0V75A5.015,5.015,0,0,1,50,80Zm20,0a5.015,5.015,0,0,1-5-5V45a5,5,0,0,1,10,0V75A5.015,5.015,0,0,1,70,80Z\" transform=\"translate(350 -414)\" />\n                    </g>\n                  </svg>\n                  <div className=\"controlsText\">\n                  Pause\n                  </div>\n                </li>\n                <li onClick={this.generateNextGeneration} >\n                  <svg viewBox=\"0 0 100 100\">\n                    <path id=\"Next\" fill=\"#19d676\" d=\"M50,100A50.013,50.013,0,0,1,30.538,3.929,50.013,50.013,0,0,1,69.462,96.071,49.686,49.686,0,0,1,50,100ZM68.357,27.971a3.675,3.675,0,0,0-3.671,3.671V68.357a3.671,3.671,0,0,0,7.342,0V31.642A3.675,3.675,0,0,0,68.357,27.971ZM31.666,31.383a3.693,3.693,0,0,0-3.695,3.674V64.942a3.689,3.689,0,0,0,5.8,3.01L54.956,53.01A3.647,3.647,0,0,0,56.5,49.983a3.579,3.579,0,0,0-1.542-2.957L33.772,32.046A3.712,3.712,0,0,0,31.666,31.383Z\" />\n                  </svg>\n                  <div className=\"controlsText\">\n                  Next\n                  </div>\n                </li>\n                <li onClick={this.randomize}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\">\n                    <path id=\"Randomize\" fill=\"#19d676\" d=\"M50,100A50.013,50.013,0,0,1,30.538,3.929,50.013,50.013,0,0,1,69.462,96.071,49.686,49.686,0,0,1,50,100Zm7.267-46.1h0l-3.9,3.9,8.661,8.662-3.32,3.32a1.349,1.349,0,0,0-.292,1.494,1.371,1.371,0,0,0,1.288.858H70.189a1.369,1.369,0,0,0,1.383-1.383V60.266a1.371,1.371,0,0,0-1.38-1.388,1.345,1.345,0,0,0-.971.419L65.928,62.59,57.267,53.9ZM59.7,27.863a1.371,1.371,0,0,0-1.288.858,1.349,1.349,0,0,0,.292,1.494L62,33.508,29.236,66.27a2.759,2.759,0,1,0,3.9,3.9l32.79-32.734,3.293,3.293a1.343,1.343,0,0,0,.954.4,1.383,1.383,0,0,0,1.4-1.4V29.246a1.369,1.369,0,0,0-1.383-1.383ZM31.215,28.991A2.76,2.76,0,0,0,29.264,33.7L41.605,46.043l3.929-3.875L33.166,29.8A2.741,2.741,0,0,0,31.215,28.991Z\" />\n                  </svg>\n                  <div className=\"controlsText\">\n                  Random\n                  </div>\n                  </li>\n                <li onClick={this.clear}>\n                  <svg viewBox=\"0 0 100 100\">\n                    <g id=\"Reset\" transform=\"translate(-360 262)\">\n                      <path id=\"Subtraction_1\" data-name=\"Subtraction 1\" fill=\"#19d676\" d=\"M50,100A50.013,50.013,0,0,1,30.538,3.929,50.013,50.013,0,0,1,69.462,96.071,49.686,49.686,0,0,1,50,100ZM27.157,55.393a3.324,3.324,0,0,0-2.5,1.139,3.253,3.253,0,0,0-.784,2.571A26.389,26.389,0,0,0,49.855,81.679h.086a27.746,27.746,0,0,0,5.22-.514A26.182,26.182,0,0,0,75.649,60.679a26.507,26.507,0,0,0-5.5-21.99,26.206,26.206,0,0,0-20.271-9.561V19.968a1.627,1.627,0,0,0-1.639-1.647,1.6,1.6,0,0,0-1.152.5L34.61,31.262a1.631,1.631,0,0,0,0,2.332L47.052,46.036a1.661,1.661,0,0,0,2.824-1.182v-9.16A19.726,19.726,0,0,1,68.985,50.6a19.916,19.916,0,0,1,.13,9.027,19.577,19.577,0,0,1-15,15,20.683,20.683,0,0,1-4.242.446A19.743,19.743,0,0,1,30.374,58.183,3.273,3.273,0,0,0,27.157,55.393Z\" transform=\"translate(360 -262)\" />\n                    </g>\n                  </svg>\n                  <div className=\"controlsText\">\n                  Clear\n                  </div>\n                </li>\n              </ul>\n              {/* Speed {this.state.speed} */}\n              {/* <button onClick={this.start}>Start</button>\n              <button onClick={this.pause}>Pause</button>\n              <button onClick={this.changeSpeed}>Speed</button>\n              <button onClick={this.pause}>Size</button>\n              <button onClick={this.randomize}>Randomize</button>\n              <button onClick={this.clear}>Clear</button> */}\n            </div>\n          </div>\n          <p className=\"generationCount\">Generation {this.state.generation}</p>\n\n        </div>\n        <div id=\"Footer\">\n          <p className=\"generationCount-mobile\">Generation {this.state.generation}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.cc5a2e2a.png\";"],"sourceRoot":""}